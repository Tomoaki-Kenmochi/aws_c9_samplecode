puts "The sum of 2 and 3 is 5."

argv0 = ARGV[0]
argv1 = ARGV[1]

# 整数として出力
sum = argv0.to_i + argv1.to_i

# # 文字列として出力
# sum = argv0 + argv1

# # 整数の配列として出力
# sum = [argv0.to_i] + [argv1.to_i]

# # 文字列の配列として出力
# sum = [argv0] + [argv1]


puts "The sum of #{argv0} and #{argv1} is #{sum}."



# 以下、公式ウェブサイトより引用：

# Rubyでは、すべてのものはオブジェクトです。
# すべての情報の塊・コードには、固有のプロパティとアクションを与えることができます。
# オブジェクト指向プログラミングでは、プロパティはインスタンス変数、アクションはメソッドと呼ばれます。
# Rubyによる純粋なオブジェクト指向のアプローチは、 最もよくみられる、数にアクションを与える以下のようなコード片で確認できます。

5.times { print "Hello, World!\n" }

# 多くの言語では、数やそれ以外のプリミティブな型はオブジェクトではありません。
# ですが、RubyはSmalltalkの影響を受け、すべての型がメソッドやインスタンス変数を与えられるようになっています。
# これがRubyが使いやすい理由の一つです。
# Rubyの世界では、オブジェクトに適用できることは、すべてのものに対して適用できるのです。
